// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using guitarapi.Data;

#nullable disable

namespace guitarapi.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220606135216_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("guitarapi.Models.Guitar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProducerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("StringsId")
                        .HasColumnType("int");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProducerId");

                    b.HasIndex("StringsId");

                    b.HasIndex("TypeId");

                    b.ToTable("Guitars");
                });

            modelBuilder.Entity("guitarapi.Models.GuitarType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("GuitarTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Electric"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Acoustic"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Classical"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Electro acoustic"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Classical Acoustic-Electric"
                        });
                });

            modelBuilder.Entity("guitarapi.Models.Producer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Producers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Fender"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Gibson"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Taylor"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Martin"
                        },
                        new
                        {
                            Id = 5,
                            Name = "PRS"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Ibanez"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Yamaha"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Epiphone"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Suhr"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Rickenbacker"
                        });
                });

            modelBuilder.Entity("guitarapi.Models.Strings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Strings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Nylon"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Carbon"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Pro steel"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Pure nickel"
                        });
                });

            modelBuilder.Entity("guitarapi.Models.Guitar", b =>
                {
                    b.HasOne("guitarapi.Models.Producer", "Producer")
                        .WithMany("Guitars")
                        .HasForeignKey("ProducerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("guitarapi.Models.Strings", "Strings")
                        .WithMany("Guitars")
                        .HasForeignKey("StringsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("guitarapi.Models.GuitarType", "Type")
                        .WithMany("Guitars")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producer");

                    b.Navigation("Strings");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("guitarapi.Models.GuitarType", b =>
                {
                    b.Navigation("Guitars");
                });

            modelBuilder.Entity("guitarapi.Models.Producer", b =>
                {
                    b.Navigation("Guitars");
                });

            modelBuilder.Entity("guitarapi.Models.Strings", b =>
                {
                    b.Navigation("Guitars");
                });
#pragma warning restore 612, 618
        }
    }
}
